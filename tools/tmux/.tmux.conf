#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

setw -g mode-keys vi # Use Vi mode
set -g mouse on # Allow the mouse to resize windows and select tabs
set -g history-limit 10000 # Increase scrollback buffer size
set -g base-index 1 # Start window and pane numbering from 1 for easier switching
setw -g pane-base-index 1
set -g allow-rename on # Allow automatic renaming of windows
set -g renumber-windows on # Renumber windows when one is removed.
set -g default-terminal "${TERM}" # Improve colors
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' # Enable undercurl
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # Enable undercurl colors
set -g set-titles on # Allow tmux to set the terminal title
setw -g monitor-activity on # Monitor window activity to display in the status bar
set -g bell-action any # A bell in another window should cause a bell in the current window
set -g visual-bell off # Don't show distracting notifications
set -g visual-activity off
set -g focus-events on # Focus events enabled for terminals that support them
setw -g aggressive-resize on # Useful when using sharing a session with different size terminals
set -g detach-on-destroy off # don't detach tmux when killing a session
set -s escape-time 0 # address vim mode switching delay (http://superuser.com/a/252717/65504)
set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",xterm-256color:RGB"

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
set-option -g status-left-length 100
# set-option -g status-right-length 100
set-option -g status-left " #{session_name}  "
set-option -g status-right " "

# set-option -g status-style "fg=#7C7D83 bg=#18242e" # ayu
set-option -g status-style "fg=#7C7D83 bg=#16151d" # tokyo night
# set-option -g status-style "fg=#7C7D83 bg=#24282f" # one dark
# set-option -g status-style "fg=#7C7D83 bg=default" # gruvbox dark
# set-option -g status-style "fg=#828bb1 bg=default" # default will set the background to transparent

set-option -g window-status-format "#{window_index}:#{window_name}#{window_flags} " # window_name -> pane_current_command
set-option -g window-status-current-format "#{window_index}:#{window_name}#{window_flags} "
set-option -g window-status-current-style "fg=#dcc7a0"  #for gruvbox use: dcc7a0 or aeb6ff
set-option -g window-status-activity-style none

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Send prefix to a nested tmux session by doubling the prefix
set -g prefix C-a
bind C-a send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window
bind -r C-n next-window
bind -r C-p previous-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# resize panes more easily
bind H resize-pane -L 5
bind L resize-pane -R 5
bind J resize-pane -D 5
bind K resize-pane -U 5

# resize panes more easily with Ctrl
bind -r C-H resize-pane -L 5
bind -r C-L resize-pane -R 5
bind -r C-J resize-pane -D 5
bind -r C-K resize-pane -U 5

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

bind Space last-window # Switch between two most recently used windows
bind b switch-client -l # switch between two most recently used sessions
bind-key B break-pane -d # break pane out of window
bind-key E command-prompt -p "join pane from: "  "join-pane -h -s '%%'" # put pane back into window

### Copy Settings  
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse
bind-key y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to system clipboard"
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit" # open lazygit in a new window with prefix+g

# open an application in a new window with prefix+o, and allow me to provide the app name
bind-key o command-prompt -p "open app: " "new-window '%%'"

# show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# use prefix+| (or prefix+\) to split window horizontally and prefix+- or
# (prefix+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

bind C-e display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t" 

#--------------------------------------------------------------------------
# Plugins
#-------------------------------------------------------------------------- 

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' 
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'  
set -g @plugin 'wfxr/tmux-fzf-url'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
